name: build-packages
on: [push, pull_request]
jobs:
  packages:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {package: "lib/usb", os: "ubuntu-16.04", os-name: "linux"}
          - {package: "lib/xml2", os: "ubuntu-16.04", os-name: "linux"}
          - {package: "prog/icefunprog", os: "ubuntu-16.04", os-name: "linux"}
          - {package: "prog/flterm", os: "ubuntu-16.04", os-name: "linux"}
          - {package: "lib/ftdi", os: "ubuntu-16.04", os-name: "linux"}
          - {package: "prog/fxload", os: "ubuntu-16.04", os-name: "linux"}
          - {package: "prog/dfu-util", os: "ubuntu-16.04", os-name: "linux"}
          - {package: "prog/iceprog", os: "ubuntu-16.04", os-name: "linux"}
          - {package: "prog/openocd", os: "ubuntu-16.04", os-name: "linux"}

          - {package: "lib/usb", os: "macos-latest", os-name: "osx"}
          - {package: "lib/xml2", os: "macos-latest", os-name: "osx"}
          - {package: "prog/icefunprog", os: "macos-latest", os-name: "osx"}
          - {package: "prog/flterm", os: "macos-latest", os-name: "osx"}
          - {package: "lib/ftdi", os: "macos-latest", os-name: "osx"}
          - {package: "prog/dfu-util", os: "macos-latest", os-name: "osx"}
          - {package: "prog/iceprog", os: "macos-latest", os-name: "osx"}
          - {package: "prog/openocd", os: "macos-latest", os-name: "osx"}

          - {package: "lib/usb", os: "windows-latest", os-name: "windows"}
          - {package: "lib/ftdi", os: "windows-latest", os-name: "windows"}
          - {package: "prog/iceprog", os: "windows-latest", os-name: "windows"}
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: 'windows: add msys2 to PATH'
      if: matrix.os-name == 'windows'
      run: echo "C:\msys64" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      shell: powershell
    - name: 'macos: install dependencies'
      if: matrix.os-name == 'osx'
      run: brew install coreutils autoconf automake libtool
    - name: build
      env:
        PACKAGE: ${{ matrix.package }}
        OS_NAME: ${{ matrix.os-name }}
      run: |
        export PATH="$PATH:/c/ProgramData/Chocolatey/bin/"
        export PATH="$PATH:/c/Program Files/Git/usr/bin/"
        source .github/scripts/common.sh
        bash .github/scripts/fixup-git.sh
        bash .github/scripts/download_sdk.sh
        source .github/scripts/common.sh
        bash .github/scripts/install.sh
        bash .github/scripts/script.sh
    - name: on_success
      env:
        PACKAGE: ${{ matrix.package }}
      if: success()
      run: |
        source .github/scripts/after_success.sh
    - name: on_failure
      env:
        PACKAGE: ${{ matrix.package }}
      if: failure()
      run: |
        source .github/scripts/after_failure.sh
